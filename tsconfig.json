{
    "$schema": "https://json.schemastore.org/tsconfig",
    "compilerOptions": {
        /**
          Svelte Preprocess cannot figure out whether you have a value or a type, so tell TypeScript
          to enforce using `import type` instead of `import` for Types.
         */
        "verbatimModuleSyntax": true,
        /**
          To have warnings/errors of the Svelte compiler at the correct position,
          enable source maps by default.
         */
        "sourceMap": true,
        "strict": false,
        "esModuleInterop": true,
        "skipLibCheck": true,
        "forceConsistentCasingInFileNames": true,
        "target": "ESNext",
        "useDefineForClassFields": true,
        "module": "ESNext",
        "resolveJsonModule": true,
        /**
       * Typecheck JS in `.svelte` and `.js` files by default.
       * Disable checkJs if you'd like to use dynamic types in JS.
       * Note that setting allowJs false does not prevent the use
       * of JS in `.svelte` files.
       */
        "allowJs": true,
        "checkJs": true,
        "isolatedModules": true,
        "moduleResolution": "bundler",
        "paths": {
            "@svelte-fui/core/*": [
                "./packages/core/src/*"
            ],
            "@svelte-fui/tailwindcss/*": [
                "./packages/tailwindcss/src/*"
            ],
            "@svelte-fui/theme/*": [
                "./packages/theme/src/*"
            ],
            "@svelte-fui/themes/*": [
                "./packages/themes/src/*"
            ]
        }
    },
    "include": [
        "./packages/*"
    ],
    "exclude": [
        "./node_modules"
    ],
    "references": [
        {
            "path": "./tsconfig.node.json"
        }
    ]
}
